OSI 7계층이란?
- 국제표준화기구(ISO)에서 개발한 모델
- 컴퓨터 네트워크 프로토콜 디자인과 통신을 계층으로 나눈 모델이다.
7. Application Layer
6. Presentation Layer
5. Session Layer
4. Transport Layer
3. Network Layer
2. Data Link Layer
1. Physical Layer

Transport Layer(전송 계층)이란?
- 프로세스를 식별하는 IP(집 주소)와 포트(동  호수)를 통한 연결
- 송신자와 수신자를 연결하는  통신 서비스를 제공하는 계층
- 전송 프로토콜 : TCP와 UDP
- 연결형 통신(신뢰성/정확성) -> TCP
- 비연결형 통신(효율성) -> UDP

전송 프로토콜 TCP 란?
- 전송 제어 프로토콜 (Transmission Control Protocol)
- 프로그램 간의 데이터를 안정적이고 순서대로, 에러없이 교환할 수 있게 한다
- 연결 지향 데이터 스트림 지원, 신뢰성, 흐름 제어, 다중화 지원
- 이메일, 파일 전송 -> 손실되면 안되는 데이터

TCP 프로토콜 - TCP 세그먼트 생성
- TCP 세그먼트 = TCP 헤더 + 데이터

TCP 헤더
- 송신 포트(Source port)와 수신 포트(Destination port)
- 시퀀스
- SYN(연결 설정 요청을 위한 플래그, 메세지에 시퀀스 번호가 포함되어 있음.)
- ACK(데이터 수신 확인을 위한 플래그) / FIN (TCP 연결 종료를 위한 플래그)

3-way handshake (연결 설정 단계)

TCP의 문제점
- 패킷 전송이 확인될 때까지 대기 -> 실시간 통신과 같은 응답이 중요한 환경이라면?
- TCP는 손실을 오류로 인식하고 재전송하는 메커니즘
  -> 패킷 손실이 쉽게 일어나는 무선 네트워크 환경에서는?
- 신뢰성과 안정성을 위한 추가적인 제어 정보가 오히려 "오버헤드" 발생

WebSocket이란?
- Ws 프로토콜 기반으로 클라이언트와 서버 사이에 지속적인 완전 양방향 연결 스트림을 만들어주는 기술

WebSocket 특징
- 지속적인 완전 양방향 연결 스트림 제공
- OSI 모델 7계층에 위치 (HTTP와 동일)
- HTTP Port 80, 443에서 동작하도록 설계
- HTTP보다 낮은 오버헤드와 빠른 속도 제공

HTTP
- 비 연결성 (단일 요청-응답 방식)
- 클라리언트의 요청마다 새로운 연결 형성
- HTTP Port 80, 443에서 동작하도록 설계

WebSocket
- 양방향 통신 (연결 유지)
- 1번의 연결로 양방향 데이터 전송 가능

WebSocket Handler 인터페이스
- WebSocket negotiation : 클라이언트와 서버 간의 webSocket 연결을 설정하고 WebSocket 프로토콜로 업그레이드하기 위한 프로세스
- WebSocket negotiation 성공 && WebSocket 연결 획득 -> 실행 가능 상태
- handleMessage 메소드는 webSocket 메시지가 서버에 도착했을때 호출된다.
- handleTransportError 메소드는 데이터 전송 과정에서 발생하는 다양한 문제를 처리한다.

STOMP : Simple Text Oriented Messaging Protocol
- 텍스트 기반의 메시지 프로토콜 WebSocket을 기반으로 메시지 브로커와 pub-sub(발행-구독) 메커니즘을 지원한다.
- 메시지 브로커를 활용하여 메시지를 주고 받는 프로토콜
- TCP, WebSocket과 같은 양방향 네트워크 프로토콜 위에서 동작
- 프레임 단위로 메시지 구성
- 발행-구독 모델
- 프레임 단위의 프로토콜
- 다양한 언어와 프레임워크 지원 -> 메시지 기반의 실시간 통신을 구현
- 결론은 메시징 전송을 효율적으로 하기 위한 프로토콜