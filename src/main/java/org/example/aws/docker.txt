Docker란?
- 애플리케이션을 컨테이너로 격리하여 어디에서든 일관된 환경에서 실행할 수 있도록 해주는 PaaS 서비스
- "컨테이너로 격리"
- 로컬과 배포 환경의 환경적 차이를 해결하기 위해 애플리케이션과 애플리케이션 실행에 필요한 환경들을 함께 컨테이너로 묶음
- "어디서든 일관된 환경에서 실행"
- 운영체제가 존재하는 환경이라면, 도커를 설치하고 도커 위에서 컨테이너를 실핼할 수 있음
- "PaaS"
- 사용자는 컨테이너에 담길 애플리케이션과 데이터만 다루면 됨

이미지 & 컨테이너
도커 이미지
- 애플리케이션과 애플리케이션의 실행 환경을 합쳐 하나의 이미지처럼 촬영할 수 있음
- 컨테이너를 생성하기 위한 일종의 템플릿임
- 태그를 통해 이미지 버전을 관리할 수 있음
도커 컨테이너
- 도커 이미지를 기반으로 만들어진 실행 가능한 인스턴스임
- 애플리케이션과 애플리케이션이 구동되는 격리된 환경 그 자체를 의미함
- 애플리케이션 개발 -> 이미지 빌드 -> 컨테이너 생성

Docker 동작 구조
도커 클라이언트
- 사용자가 도커를 사용하기 위해 필요한 CLI 도구를 의미함
- Docker CLI를 통해 컨테이너, 이미지 등을 관리할 수 있음
도커 호스트
- 도커가 실행되는 물리적 또는 가상 서버임
- 도커 컨테이너 실행에 필요한 컴퓨팅 자원들을 관리하고 할당함
도커 레지스트리
- 도커 이미지를 저장하고 배포하는 저장소임
- 대표적인 퍼블릭 도커 레지스트리 서비스로 Docker Hub가 있음

Docker Hub
- https://hub.docker.com
- 도커 이미지를 검색, 저장, 배포할 수 있는 레포지토리로 깃헙과 유사함
- 깃헙에서는 소스 코드만 업로드할 수 있는 반면, 도커 허브에는 소스 코드와 실행 환경을 정의한 이미지를 업로드할 수 있음
- 다른 사람이 만들어 둔 이미지를 다운로드하여 사용할 수 있음




https://velog.io/@jungedlin/Docker
https://velog.io/@gclee/Docker란#docker의-주요-장점
https://sunrise-min.tistory.com/entry/Docker-Container와-Image란-무엇인가
https://m.blog.naver.com/islove8587/223420625260
https://adjh54.tistory.com/352
