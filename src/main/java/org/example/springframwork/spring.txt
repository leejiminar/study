프레임워크의 장단점
장점 :
- 빠르고 효율적인 코드 작성
- 비즈니스 로직에 집중할 수 있도록 함
- 정해진 규약이 있기에 유지 보수에 용이
단점 :
- 프레임워크 자체 기술에 대한 추가 학습 필요
- 정해진 규약이 있기에 제약이 있음

스프링 프레임워크란?
- JAVA의 웹 프레임워크로 JAVA 언어를 기반으로 사용한다.
  JAVA로 다양한 어플리케이션을 만들기 위한 프로그래밍 틀이라 할 수 있다.
- JAVA의 활용도가 높아지면서, JAVA를 이용한 기술이 JSP, Mybatis, JPA 등의 기술이 생겨났다.
  Spring은 다른 사람의 코드를 참조하기 쉽고 편리한 구조로
  앞서 말한 기술들을 더 쉽게 사용해주는 오픈소스 프레임워크 이다.

POJO
- 다른 기술은 사용하지 않고 순수 Java만을 통해 생성한 객체 = Java 및 Java 스펙에 정의된 기술만을 사용

IOC(Inversion of Control)
- 객체의 생성 및 의존성 관리를 프레임워크나 컨테이너가 대신한다
- 애플리케이션 흐름의 주도권을 Spring Framework가 가져감

DI(Dependency Injection)
- 객체 간 의존 관계를 외부로부터 주입 또는 전달받는 방식
- 객체 간 결합도를 낮추는 핵심적인 수단

AOP(Aspect Oriented Programming)
- 관심 지향 프로그래밍
- 핵심 관심 사항과 공통 관심 사항의 분리
- 로깅, 보안, 트랜잭션, 성능 모니터링 등
- 모듈화, 유지보수에 용이, 높은 재사용성

PSA(Portable Service Abstraction)
- 서비스 접근을 추상화하여 다양한 기술 스택 간 이식성을 제공
- 추상화된 상위 클래스를 통해 하위 클래스의 기능을 사용

Spring Framework
- 설정이 복잡하고 어려움
- 다양한 모듈 호환성의 문제 존재

SpringBoot
- 의존성 라이브러리 자동 관리
- 애플리케이션 설정의 자동 구성
- 내장 WAS
- 모니터링

